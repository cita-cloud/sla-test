apiVersion: v1
kind: ConfigMap
data:
  config.toml: |+
    sender_interval = 30
    checker_interval = 10
    log_filter = "info,hyper=warn"
    storage_path = "record_db"
    cache_url = "http://${CHAIN_NAME}-cache:8000"
    metrics_port: 61616
    data_for_send = [
        """{
        "data": "",
        "quota": 20000,
        "to": "0xdc64666ff929994e5ee1131381d1d3f8693d3dab",
        "value": "0x1"
        }""",
    ]
metadata:
  name: ${CHAIN_NAME}-sla-test-client-config

---
apiVersion: v1
kind: ConfigMap
data:
  client-log4rs.yaml: "# Scan this file for changes every 30 seconds\nrefresh_rate: 30 seconds\n\nappenders:\n  # An appender named \"stdout\" that writes to stdout\n  stdout:\n    kind: console\n\n  journey-service:\n    kind: rolling_file\n    path: \"logs/sla-test-client.log\"\n    policy:\n      # Identifies which policy is to be used. If no kind is specified, it will\n      # default to \"compound\".\n      kind: compound\n      # The remainder of the configuration is passed along to the policy's\n      # deserializer, and will vary based on the kind of policy.\n      trigger:\n        kind: size\n        limit: 1mb\n      roller:\n        kind: fixed_window\n        base: 1\n        count: 5\n        pattern: \"logs/sla-test-client.{}.gz\"\n\n# Set the default logging level and attach the default appender to the root\nroot:\n  level: info\n  appenders:\n    - stdout\n    - journey-service\n\nloggers:\n  hyper:\n    level: warn\n"
metadata:
  name: ${CHAIN_NAME}-sla-test-client-log

---
apiVersion: v1
kind: Service
metadata:
  name: ${CHAIN_NAME}-sla-test-client
spec:
  ports:
    - name: sla-test-client
      port: 61616
      protocol: TCP
      targetPort: 61616
  selector:
    app.kubernetes.io/name: ${CHAIN_NAME}-sla-test-client
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: ${CHAIN_NAME}-sla-test-client
  name: ${CHAIN_NAME}-sla-test-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ${CHAIN_NAME}-sla-test-client
  serviceName: ""
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${CHAIN_NAME}-sla-test-client
    spec:
      containers:
        - command:
            - client
          name: sla-test-client
          image: "docker.io/citacloud/sla-test-client:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 61616
              name: sla-test-client
              protocol: TCP
          resources:
            limits:
              cpu: 4000m
              memory: 8192Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - mountPath: /data
              name: sla-test-client-config
          workingDir: /data
      volumes:
        - configMap:
            name: ${CHAIN_NAME}-sla-test-client-config
          name: sla-test-client-config
        - configMap:
            name: ${CHAIN_NAME}-sla-test-client-log
          name: sla-test-client-log
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: datadir
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: ${SC}