apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${CHAIN_NAME}-envoy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ${CHAIN_NAME}-envoy
  template:
    metadata:
      labels:
        app: ${CHAIN_NAME}-envoy
    spec:
      containers:
        - name: envoy
          image: envoyproxy/envoy:v1.22.2
          imagePullPolicy: IfNotPresent
          ports:
            - name: admin
              containerPort: 9901
            - name: controller
              containerPort: 60004
            - name: executor
              containerPort: 60002
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
      volumes:
        - name: envoy-config
          configMap:
            name: ${CHAIN_NAME}-envoy-config

---
apiVersion: v1
kind: Service
metadata:
  name: ${CHAIN_NAME}-envoy
spec:
  type: ClusterIP
  ports:
    - name: admin
      port: 9901
      targetPort: admin
    - name: controller
      port: 60004
      targetPort: controller
    - name: executor
      port: 60002
      targetPort: executor
  selector:
    app: ${CHAIN_NAME}-envoy

---
apiVersion: v1
kind: Service
metadata:
  name: ${CHAIN_NAME}-controller
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/chain-name: ${CHAIN_NAME}

---
apiVersion: v1
kind: Service
metadata:
  name: ${CHAIN_NAME}-executor
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/chain-name: ${CHAIN_NAME}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${CHAIN_NAME}-envoy-config
data:
  envoy.yaml: |
    admin:
      access_log_path: /tmp/admin_access.log
      profile_path: /tmp/envoy.prof
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901
    static_resources:
      listeners:
        - name: controller_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 60004
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    http_filters:
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                    codec_type: AUTO
                    stat_prefix: ingress_http
                    route_config:
                      name: controller_route
                      virtual_hosts:
                        - name: controller_service
                          domains: [ "*" ]
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: service_controller
        - name: executor_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 60002
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    http_filters:
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                    codec_type: AUTO
                    stat_prefix: ingress_http
                    route_config:
                      name: executor_route
                      virtual_hosts:
                        - name: executor_service
                          domains: [ "*" ]
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: service_executor

      clusters:
        - name: service_controller
          type: STRICT_DNS
          dns_lookup_family: V4_ONLY
          lb_policy: LEAST_REQUEST
          http2_protocol_options: {}
          load_assignment:
            cluster_name: service_controller
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: ${CHAIN_NAME}-controller
                          port_value: 50004
        - name: service_executor
          type: STRICT_DNS
          dns_lookup_family: V4_ONLY
          lb_policy: LEAST_REQUEST
          http2_protocol_options: {}
          load_assignment:
            cluster_name: service_executor
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: ${CHAIN_NAME}-executor
                          port_value: 50002
